apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'


android {
    compileSdkVersion rootProject.compileSdkVersion
    defaultConfig {
        applicationId "rock.sinsuenios"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled=true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    //kotlin coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$rootProject.kotlinCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$rootProject.kotlinCoroutinesVersion"

    implementation "com.android.support:appcompat-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:design:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:cardview-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support:recyclerview-v7:${rootProject.supportLibraryVersion}"
    implementation "com.android.support.constraint:constraint-layout:${rootProject.constraintVersion}"
    implementation "com.android.support:support-vector-drawable:${rootProject.supportLibraryVersion}"
    testImplementation "junit:junit:${rootProject.junitVersion}"
    androidTestImplementation "com.android.support.test:runner:${rootProject.runnerVersion}"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}"

    //databinding
    kapt "com.android.databinding:compiler:${rootProject.compilerVersion}"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:${rootProject.lifecycleVersion}"
    /* alternatively - just ViewModel
    implementation "android.arch.lifecycle:viewmodel:${rootProject.lifecycleVersion}" // use -ktx for Kotlin
    // alternatively - just LiveData
    implementation "android.arch.lifecycle:livedata:${rootProject.lifecycleVersion}"
    // alternatively - Lifecycles only (no ViewModel or LiveData).
    //     Support library depends on this lightweight import
    implementation "android.arch.lifecycle:runtime:${rootProject.lifecycleVersion}"

    annotationProcessor "android.arch.lifecycle:compiler:${rootProject.lifecycleVersion}"
    // alternately - if using Java8, use the following instead of compiler
    implementation "android.arch.lifecycle:common-java8:${rootProject.lifecycleVersion}"

    // optional - ReactiveStreams support for LiveData
    implementation "android.arch.lifecycle:reactivestreams:$lifecycle_version"

    // optional - Test helpers for LiveData
    testImplementation "android.arch.core:core-testing:${rootProject.lifecycleVersion}"
    */

    //room
    implementation "android.arch.persistence.room:runtime:$rootProject.roomVersion"
    kapt "android.arch.persistence.room:compiler:$rootProject.roomVersion"
    androidTestImplementation "android.arch.persistence.room:testing:$rootProject.roomVersion"

    //ticket-view
    implementation 'com.vipulasri:ticketview:1.0.5'


    //glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"

    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    //implementation applicationDependencies.retrofit
    //implementation applicationDependencies.okhttpLoggingInterceptor

    // Paging

    implementation "android.arch.paging:runtime:$rootProject.pagingVersion"

    // optional - RxJava support, currently in release candidate
    implementation "android.arch.paging:rxjava2:1.0.0-rc1"

    // Rx
    implementation 'io.reactivex.rxjava2:rxjava:2.1.16'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
}

kotlin {
    experimental {
        coroutines "enable"
    }
}